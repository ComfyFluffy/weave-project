name: Full CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint

      - name: Check Prettier formatting
        run: pnpm format:check

      - name: TypeScript type checking
        run: |
          echo "Checking backend TypeScript..."
          cd apps/backend && pnpm tsc --noEmit
          echo "Checking frontend TypeScript..."
          cd ../frontend && pnpm tsc --noEmit

  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: quality-checks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        run: |
          cd apps/frontend
          pnpm build

      - name: Build backend (if build script exists)
        run: |
          cd apps/backend
          # Add build script when you have one
          # pnpm build

  # test:
  #   name: Run Tests
  #   runs-on: ubuntu-latest
  #   needs: quality-checks
  #
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'
  #
  #     - name: Enable Corepack
  #       run: corepack enable
  #
  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile
  #
  #     - name: Build shared types
  #       run: pnpm build:types
  #
  #     - name: Run tests
  #       run: pnpm test
